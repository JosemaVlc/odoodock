version: '3.7'

# Definimos un volumen nombrado (odoo-comf) pero que este enlazado a una
# carpeta. De esta manera es posible realizar copias sobre él desde el host
# en la construcción de la imagen y además posteriormente acceder a ellas 
# desde el host.
# Un volumen enlazado directamente host:contenedor elimina todo lo que 
# haya en esa carpeta del contenedor 
volumes:
  odoo-conf:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${SERVER_INFO_PATH_HOST}/odoo/config
      
services:
  #############################
  ## ODOO #####################
  #############################
  # Definimos el servicio Web, en este caso Odoo
  web:
    build:
      # donde está el código pasra construir la imagen
      context: ./odoo
      # valores que pueden ser utilizados en la construcción de la imagen
      args:
          - ODOO_VERSION=${ODOO_VERSION}
          - ODOO_SHELL_OH_MY_ZSH=${ODOO_SHELL_OH_MY_ZSH}
          - ODOO_INSTALL_GIT=${ODOO_INSTALL_GIT}
          - ODOO_INSTALL_SSH=${ODOO_INSTALL_SSH}
          - ODOO_INSTALL_SSL_DEV=${ODOO_INSTALL_SSL_DEV}
          - ODOO_INSTALL_PDFTK=${ODOO_INSTALL_PDFTK}
       
    # Port Mapping: indicamos que el puerto 8069 del contenedor se mapeara con 
    # el puerto ODOO_PORT en el anfritrion
    # Permitiendo acceder a Odoo mediante http://localhost:ODOO_PORT
    # Además mapeamos el puerto 22 para ssh
    ports:
      - "${ODOO_SSH_PORT}:22"
      - "${ODOO_PORT}:8069"

    # permito tener el contenedor vivo. Al eliminar el punto de entrada una vez arranca se para
    # con tty: true puedo entrar y trabajar sobre él.
    tty: true
    # Indicamos que depende de "db", por lo cual debe ser procesada primero "db"
    depends_on:
      - db

    # Definimos variables de entorno de Odoo
    environment:
      # conexión con Postgress
      - HOST=${ODOO_POSTGRESS_HOST}
      - USER=${ODOO_POSTGRESS_USER}
      - PASSWORD=${ODOO_POSTGRESS_PASSWORD}
      - PORT=${ODOO_POSTGRESS_PORT}

    # Mapeamos el directorio de los modulos (como por ejemplo "/mnt/extra-addons")
    # en un directorio local, por defecto en el carpeta ../addons del directorio 
    # donde se ejecuta docker-compose
    volumes:
      - ${APP_MODULE_PATH_HOST}:/mnt/extra-addons
      - ${DATA_PATH_HOST}/odoo:/var/lib/odoo
      - odoo-conf:/etc/odoo
      - ${SERVER_INFO_PATH_HOST}/odoo/logs:/var/log/odoo
      - ${SERVER_INFO_PATH_HOST}/odoo/repo:${REPO_PATH_CONTAINER}
      - ${SERVER_INFO_PATH_HOST}/odoo/home:/home/odoo

  #################################
  ## POSTGRES #####################
  #################################
  # Definimos el servicio de la base de datos
  db:
    build:
      context: ./postgres
      args:
        - POSTGRES_VERSION=${POSTGRES_VERSION}
        - POSTGRES_IMAGE=${POSTGRES_IMAGE}
        
    ports:
      - "${POSTGRES_PORT}:5432"
      
    # Definimos variables de entorno de PostgreSQL
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

    # Mapeamos el directorio del contenedor "var/lib/postgresql/data" en un directorio local
    # por defecto en la carpeta .odoodock del home del usuario
    volumes:
      - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data